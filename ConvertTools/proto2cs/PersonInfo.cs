// Generated by ProtoGen, Version=2.4.1.555, Culture=neutral, PublicKeyToken=17b3b1f090c3ea48.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace tnt_deploy {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class PersonInfo {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_tnt_deploy_PERSON_INFO__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::tnt_deploy.PERSON_INFO, global::tnt_deploy.PERSON_INFO.Builder> internal__static_tnt_deploy_PERSON_INFO__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_tnt_deploy_PERSON_INFO_ARRAY__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::tnt_deploy.PERSON_INFO_ARRAY, global::tnt_deploy.PERSON_INFO_ARRAY.Builder> internal__static_tnt_deploy_PERSON_INFO_ARRAY__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static PersonInfo() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChFwZXJzb25faW5mby5wcm90bxIKdG50X2RlcGxveSIsCgtQRVJTT05fSU5G", 
            "TxINCgJpZBgBIAIoDToBMBIOCgRuYW1lGAIgASgMOgAiOwoRUEVSU09OX0lO", 
            "Rk9fQVJSQVkSJgoFaXRlbXMYASADKAsyFy50bnRfZGVwbG95LlBFUlNPTl9J", 
          "TkZP"));
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_tnt_deploy_PERSON_INFO__Descriptor = Descriptor.MessageTypes[0];
        internal__static_tnt_deploy_PERSON_INFO__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::tnt_deploy.PERSON_INFO, global::tnt_deploy.PERSON_INFO.Builder>(internal__static_tnt_deploy_PERSON_INFO__Descriptor,
                new string[] { "Id", "Name", });
        internal__static_tnt_deploy_PERSON_INFO_ARRAY__Descriptor = Descriptor.MessageTypes[1];
        internal__static_tnt_deploy_PERSON_INFO_ARRAY__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::tnt_deploy.PERSON_INFO_ARRAY, global::tnt_deploy.PERSON_INFO_ARRAY.Builder>(internal__static_tnt_deploy_PERSON_INFO_ARRAY__Descriptor,
                new string[] { "Items", });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class PERSON_INFO : pb::GeneratedMessage<PERSON_INFO, PERSON_INFO.Builder> {
    private PERSON_INFO() { }
    private static readonly PERSON_INFO defaultInstance = new PERSON_INFO().MakeReadOnly();
    private static readonly string[] _pERSONINFOFieldNames = new string[] { "id", "name" };
    private static readonly uint[] _pERSONINFOFieldTags = new uint[] { 8, 18 };
    public static PERSON_INFO DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PERSON_INFO DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override PERSON_INFO ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::tnt_deploy.PersonInfo.internal__static_tnt_deploy_PERSON_INFO__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PERSON_INFO, PERSON_INFO.Builder> InternalFieldAccessors {
      get { return global::tnt_deploy.PersonInfo.internal__static_tnt_deploy_PERSON_INFO__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private uint id_;
    public bool HasId {
      get { return hasId; }
    }
    [global::System.CLSCompliant(false)]
    public uint Id {
      get { return id_; }
    }
    
    public const int NameFieldNumber = 2;
    private bool hasName;
    private pb::ByteString name_ = (pb::ByteString) global::tnt_deploy.PERSON_INFO.Descriptor.Fields[1].DefaultValue;
    public bool HasName {
      get { return hasName; }
    }
    public pb::ByteString Name {
      get { return name_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _pERSONINFOFieldNames;
      if (hasId) {
        output.WriteUInt32(1, field_names[0], Id);
      }
      if (hasName) {
        output.WriteBytes(2, field_names[1], Name);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasId) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, Id);
      }
      if (hasName) {
        size += pb::CodedOutputStream.ComputeBytesSize(2, Name);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static PERSON_INFO ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PERSON_INFO ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PERSON_INFO ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PERSON_INFO ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PERSON_INFO ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PERSON_INFO ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PERSON_INFO ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PERSON_INFO ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PERSON_INFO ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PERSON_INFO ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private PERSON_INFO MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PERSON_INFO prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<PERSON_INFO, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(PERSON_INFO cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private PERSON_INFO result;
      
      private PERSON_INFO PrepareBuilder() {
        if (resultIsReadOnly) {
          PERSON_INFO original = result;
          result = new PERSON_INFO();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override PERSON_INFO MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::tnt_deploy.PERSON_INFO.Descriptor; }
      }
      
      public override PERSON_INFO DefaultInstanceForType {
        get { return global::tnt_deploy.PERSON_INFO.DefaultInstance; }
      }
      
      public override PERSON_INFO BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PERSON_INFO) {
          return MergeFrom((PERSON_INFO) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PERSON_INFO other) {
        if (other == global::tnt_deploy.PERSON_INFO.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.HasName) {
          Name = other.Name;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_pERSONINFOFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _pERSONINFOFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasId = input.ReadUInt32(ref result.id_);
              break;
            }
            case 18: {
              result.hasName = input.ReadBytes(ref result.name_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
        get { return result.hasId; }
      }
      [global::System.CLSCompliant(false)]
      public uint Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetId(uint value) {
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = 0;
        return this;
      }
      
      public bool HasName {
        get { return result.hasName; }
      }
      public pb::ByteString Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder ClearName() {
        PrepareBuilder();
        result.hasName = false;
        result.name_ = (pb::ByteString) global::tnt_deploy.PERSON_INFO.Descriptor.Fields[1].DefaultValue;
        return this;
      }
    }
    static PERSON_INFO() {
      object.ReferenceEquals(global::tnt_deploy.PersonInfo.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class PERSON_INFO_ARRAY : pb::GeneratedMessage<PERSON_INFO_ARRAY, PERSON_INFO_ARRAY.Builder> {
    private PERSON_INFO_ARRAY() { }
    private static readonly PERSON_INFO_ARRAY defaultInstance = new PERSON_INFO_ARRAY().MakeReadOnly();
    private static readonly string[] _pERSONINFOARRAYFieldNames = new string[] { "items" };
    private static readonly uint[] _pERSONINFOARRAYFieldTags = new uint[] { 10 };
    public static PERSON_INFO_ARRAY DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PERSON_INFO_ARRAY DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override PERSON_INFO_ARRAY ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::tnt_deploy.PersonInfo.internal__static_tnt_deploy_PERSON_INFO_ARRAY__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PERSON_INFO_ARRAY, PERSON_INFO_ARRAY.Builder> InternalFieldAccessors {
      get { return global::tnt_deploy.PersonInfo.internal__static_tnt_deploy_PERSON_INFO_ARRAY__FieldAccessorTable; }
    }
    
    public const int ItemsFieldNumber = 1;
    private pbc::PopsicleList<global::tnt_deploy.PERSON_INFO> items_ = new pbc::PopsicleList<global::tnt_deploy.PERSON_INFO>();
    public scg::IList<global::tnt_deploy.PERSON_INFO> ItemsList {
      get { return items_; }
    }
    public int ItemsCount {
      get { return items_.Count; }
    }
    public global::tnt_deploy.PERSON_INFO GetItems(int index) {
      return items_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::tnt_deploy.PERSON_INFO element in ItemsList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _pERSONINFOARRAYFieldNames;
      if (items_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], items_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::tnt_deploy.PERSON_INFO element in ItemsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static PERSON_INFO_ARRAY ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PERSON_INFO_ARRAY ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PERSON_INFO_ARRAY ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PERSON_INFO_ARRAY ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PERSON_INFO_ARRAY ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PERSON_INFO_ARRAY ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PERSON_INFO_ARRAY ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PERSON_INFO_ARRAY ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PERSON_INFO_ARRAY ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PERSON_INFO_ARRAY ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private PERSON_INFO_ARRAY MakeReadOnly() {
      items_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PERSON_INFO_ARRAY prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<PERSON_INFO_ARRAY, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(PERSON_INFO_ARRAY cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private PERSON_INFO_ARRAY result;
      
      private PERSON_INFO_ARRAY PrepareBuilder() {
        if (resultIsReadOnly) {
          PERSON_INFO_ARRAY original = result;
          result = new PERSON_INFO_ARRAY();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override PERSON_INFO_ARRAY MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::tnt_deploy.PERSON_INFO_ARRAY.Descriptor; }
      }
      
      public override PERSON_INFO_ARRAY DefaultInstanceForType {
        get { return global::tnt_deploy.PERSON_INFO_ARRAY.DefaultInstance; }
      }
      
      public override PERSON_INFO_ARRAY BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PERSON_INFO_ARRAY) {
          return MergeFrom((PERSON_INFO_ARRAY) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PERSON_INFO_ARRAY other) {
        if (other == global::tnt_deploy.PERSON_INFO_ARRAY.DefaultInstance) return this;
        PrepareBuilder();
        if (other.items_.Count != 0) {
          result.items_.Add(other.items_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_pERSONINFOARRAYFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _pERSONINFOARRAYFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.items_, global::tnt_deploy.PERSON_INFO.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::tnt_deploy.PERSON_INFO> ItemsList {
        get { return PrepareBuilder().items_; }
      }
      public int ItemsCount {
        get { return result.ItemsCount; }
      }
      public global::tnt_deploy.PERSON_INFO GetItems(int index) {
        return result.GetItems(index);
      }
      public Builder SetItems(int index, global::tnt_deploy.PERSON_INFO value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.items_[index] = value;
        return this;
      }
      public Builder SetItems(int index, global::tnt_deploy.PERSON_INFO.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.items_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddItems(global::tnt_deploy.PERSON_INFO value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.items_.Add(value);
        return this;
      }
      public Builder AddItems(global::tnt_deploy.PERSON_INFO.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.items_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeItems(scg::IEnumerable<global::tnt_deploy.PERSON_INFO> values) {
        PrepareBuilder();
        result.items_.Add(values);
        return this;
      }
      public Builder ClearItems() {
        PrepareBuilder();
        result.items_.Clear();
        return this;
      }
    }
    static PERSON_INFO_ARRAY() {
      object.ReferenceEquals(global::tnt_deploy.PersonInfo.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
